# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/149gIgJD1vABeIPu_ki5_QoJ5e-v_FC27
"""

import pandas as pd
import matplotlib.pyplot as plt
import matplotlib.dates as mdates

# tworzymy lokalizatory 
years = mdates.YearLocator()
months = mdates.MonthLocator()
years_fmt = mdates.DateFormatter('%Y')

bitcoin_search_df = pd.read_csv('Bitcoin Search Trend.csv')
daily_bitcoin_df = pd.read_csv('Daily Bitcoin Price.csv')
tesla_search_df = pd.read_csv('TESLA Search Trend vs Price.csv')
ue_benefits_04_19_df = pd.read_csv('UE Benefits Search vs UE Rate 2004-19.csv')
ue_benefits_04_20_df = pd.read_csv('UE Benefits Search vs UE Rate 2004-20.csv')

bitcoin_search_df.head()

bitcoin_search_df.tail()

bitcoin_search_df.shape

bitcoin_search_df.describe()

bitcoin_search_df.isna().values.any()

bitcoin_search_df.MONTH = pd.to_datetime(bitcoin_search_df.MONTH)
bitcoin_search_df

daily_bitcoin_df.head()

daily_bitcoin_df.tail()

daily_bitcoin_df.shape

daily_bitcoin_df.describe()

daily_bitcoin_df.isna().values.any()

daily_bitcoin_df.isna().values.any().sum()

daily_bitcoin_df[daily_bitcoin_df.CLOSE.isna()]

daily_bitcoin_df = daily_bitcoin_df.dropna()
daily_bitcoin_df.isna().values.any()

daily_bitcoin_df.dtypes['DATE']

daily_bitcoin_df.DATE = pd.to_datetime(daily_bitcoin_df.DATE)
daily_bitcoin_df

tesla_search_df.head()

tesla_search_df.tail()

tesla_search_df.shape

tesla_search_df.describe()

tesla_search_df.isna().values.any()

tesla_search_df.MONTH = pd.to_datetime(tesla_search_df.MONTH)
tesla_search_df

ue_benefits_04_19_df.head()

ue_benefits_04_19_df.tail()

ue_benefits_04_19_df.shape

ue_benefits_04_19_df.describe()

ue_benefits_04_19_df.isna().values.any()

ue_benefits_04_19_df.MONTH = pd.to_datetime(ue_benefits_04_19_df.MONTH)
ue_benefits_04_19_df

ue_benefits_04_20_df.head()

ue_benefits_04_20_df.tail()

ue_benefits_04_20_df.shape

ue_benefits_04_19_df.describe()

ue_benefits_04_20_df.isna().values.any()

ue_benefits_04_20_df.MONTH = pd.to_datetime(ue_benefits_04_20_df.MONTH)
ue_benefits_04_20_df

daily_bitcoin_monthly = daily_bitcoin_df.resample('M', on='DATE').last()
daily_bitcoin_monthly.head()

tesla_search_df.head()

plt.figure(figsize=(14,8), dpi=150)
plt.xticks(fontsize=14, rotation=45)
plt.yticks(fontsize=14)


ax1 = plt.gca()
ax2 = ax1.twinx()

ax1.set_title('Tesla Web Search VS Stonks', fontsize=16)
ax1.set_xlabel('Date' , fontsize=14)
ax1.set_ylabel('Stonk Price TESLA', color='r', fontsize=14)
ax2.set_ylabel('Search Number TESLA', color='g',fontsize=14)

ax1.set_ylim([0, 600])
ax1.set_xlim([tesla_search_df.MONTH.min(), tesla_search_df.MONTH.max()])

ax2.plot(tesla_search_df.MONTH, tesla_search_df.TSLA_WEB_SEARCH , color='g', linewidth=2)
ax1.plot(tesla_search_df.MONTH, tesla_search_df.TSLA_USD_CLOSE, color='r', linewidth=2)
# format the  ticks formatujemy ładnie na latka 
ax1.xaxis.set_major_locator(years)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_minor_locator(months)

plt.show()

bitcoin_search_df.head()

daily_bitcoin_monthly

plt.figure(figsize=(14,8), dpi=150)
plt.xticks(fontsize=14, rotation=45)
plt.yticks(fontsize=14)


ax1 = plt.gca()
ax2 = ax1.twinx()

ax1.set_title('BTC Web Search VS Stonks', fontsize=16)
ax1.set_xlabel('Date' , fontsize=14)
ax1.set_ylabel('Stonk Price BTC', color='skyblue', fontsize=14)
ax2.set_ylabel('Search Number BTC', color='#F08F2E',fontsize=14)

ax1.set_ylim([0, 15000])
ax1.set_xlim([daily_bitcoin_monthly.DATE.min(), daily_bitcoin_monthly.DATE.max()])

ax2.plot(bitcoin_search_df.MONTH, bitcoin_search_df.BTC_NEWS_SEARCH , color='#F08F2E', linewidth=2, linestyle='--')
ax1.plot(daily_bitcoin_monthly.DATE, daily_bitcoin_monthly.CLOSE, color='skyblue', linewidth=2, marker='o')
# format the  ticks formatujemy ładnie na latka 
ax1.xaxis.set_major_locator(years)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_minor_locator(months)

plt.show()

ue_benefits_04_19_df

ue_benefits_04_20_df

plt.figure(figsize=(14,8), dpi=150, )
plt.xticks(fontsize=14, rotation=45)
plt.yticks(fontsize=14)


ax1 = plt.gca()
ax2 = ax1.twinx()

ax1.set_title('Monthly Search of "Unemployment Benefits', fontsize=16)
ax1.set_xlabel('FRED U/E Rate' , fontsize=14)
ax1.set_ylabel('Unemployment Rate', color='#F08F2E', fontsize=14)
ax2.set_ylabel('Search Number Unemployment Benefits', color='skyblue',fontsize=14)

# zmiana gridu
ax1.grid(color='grey', linestyle='--', linewidth=0.5)

ax1.set_ylim([0, 120])
ax1.set_xlim([ue_benefits_04_19_df.MONTH.min(), ue_benefits_04_19_df.MONTH.max()])

df_roll = ue_benefits_04_19_df.rolling(window=3).mean()

ax1.plot(ue_benefits_04_19_df.MONTH, df_roll.UE_BENEFITS_WEB_SEARCH , color='skyblue', linewidth=2)
ax2.plot(ue_benefits_04_19_df.MONTH, df_roll.UNRATE, color='#F08F2E', linewidth=2, linestyle='--')
 
# format the  ticks formatujemy ładnie na latka 
ax1.xaxis.set_major_locator(years)
ax1.xaxis.set_major_formatter(years_fmt)
ax1.xaxis.set_minor_locator(months)

plt.show()

plt.figure(figsize=(14,8), dpi=120)
plt.yticks(fontsize=14)
plt.xticks(fontsize=14, rotation=45)
plt.title('Monthly US "Unemployment Benefits" Web Search vs UNRATE incl 2020', fontsize=18)
 
ax1 = plt.gca()
ax2 = ax1.twinx()
 
ax1.set_ylabel('FRED U/E Rate', color='purple', fontsize=16)
ax2.set_ylabel('Search Trend', color='skyblue', fontsize=16)
 
ax1.set_xlim([ue_benefits_04_20_df.MONTH.min(), ue_benefits_04_20_df.MONTH.max()])
 
ax1.plot(ue_benefits_04_20_df.MONTH, ue_benefits_04_20_df.UNRATE, 'purple', linewidth=3)
ax2.plot(ue_benefits_04_20_df.MONTH, ue_benefits_04_20_df.UE_BENEFITS_WEB_SEARCH, 'skyblue', linewidth=3)
 
plt.show()